{"version":3,"sources":["webpack:///./src/modules lazy ^\\.\\/.*$ namespace object","webpack:///./src/metaDataList.js","webpack:///./src/api/index.js","webpack:///./src/main.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","process","SOL_FRAME_LOCAL_USER","console","log","JSON","stringify","questionType","generate","num","calculate","repeatCount","sign","type","handWrite","fontSize","DM000001","background","image","x","y","scale","shapes","shapeNum","common","gap","centerOffest","offset","className","default","choice","items","drag","dragNum","DM000002","position","center","cx","cy","rows","columns","size","width","height","DM000003","flip","DM000004","DM000005","directive","text","ttsOffset","dayTime","fireworks","frameId","meta","version","setPreloadData","fonts","loader","createLoader","preloadMP3","preloadPNGImages","preloadSVGImages","preloadFonts","preloadModules","remove","setReceiveMessage","methods","clearMain","data","param","getPostMessageData","frameLoadEnd","frameEnd","setController","metaData","actions","n","run","initActions","SOL","modules","canvas","SVG","callback","next","poseMessageData","postMessage","addUserAction","action","Number","push","lastFeedbackActions","filter","el","length","every","controller","main","document","getElementById","lastEl","lastChild","firstEl","firstChild","node","clear","parse","location","search","replace","frame_id","getMetaData","receiveMessage","window","addEventListener","Snap","start"],"mappings":"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","file":"static/js/app.9eb292cc.chunk.js","sourcesContent":["var map = {\n\t\"./DM000000\": [\n\t\t223,\n\t\t5\n\t],\n\t\"./DM000000.js\": [\n\t\t223,\n\t\t5\n\t],\n\t\"./DM000001\": [\n\t\t224,\n\t\t0,\n\t\t3\n\t],\n\t\"./DM000001.js\": [\n\t\t224,\n\t\t0,\n\t\t3\n\t],\n\t\"./DM000002\": [\n\t\t225,\n\t\t0,\n\t\t6\n\t],\n\t\"./DM000002.js\": [\n\t\t225,\n\t\t0,\n\t\t6\n\t],\n\t\"./DM000003\": [\n\t\t226,\n\t\t4\n\t],\n\t\"./DM000003.js\": [\n\t\t226,\n\t\t4\n\t],\n\t\"./DM000004\": [\n\t\t227,\n\t\t2\n\t],\n\t\"./DM000004.js\": [\n\t\t227,\n\t\t2\n\t],\n\t\"./DM000005\": [\n\t\t228,\n\t\t1\n\t],\n\t\"./DM000005.js\": [\n\t\t228,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 500;\nmodule.exports = webpackAsyncContext;","const SOLMeta = [\n    {\n        questionType: 'DM000012',\n        generate: {\n            num: [[[1, 99]], [[1, 99]]]\n        },\n        calculate: {\n            repeatCount: 5,\n            sign: '+',\n            type: 'h',\n            handWrite: false,\n            fontSize: 30\n        }\n    }\n];\nif (process.env.SOL_FRAME_LOCAL_USER === 'JB') console.log(JSON.stringify(SOLMeta));\n\nexport const module = {\n    DM000001: {\n        questionType: 'DM000001',\n        background: {\n            image: {\n                x: 400,\n                y: 250,\n                scale: 1\n            }\n        },\n        shapes: {\n            generate: { shapeNum: 2 },\n            common: {\n                gap: 350,\n                centerOffest: { x: 0, y: 0 },\n                offset: { x: 0, y: 0 },\n                scale: 0.8,\n                className: { default: 'f14', choice: 'f06' }\n            },\n            items: [{ type: 'rect' }, { type: 'circle' }, { type: 'triangle' }]\n        },\n        drag: {\n            generate: { dragNum: 5 },\n            common: {\n                gap: 150,\n                centerOffest: { x: 0, y: 0 },\n                offset: { x: 0, y: 0 },\n                scale: 0.85\n            }\n        }\n    },\n    DM000002: {\n        questionType: 'DM000002',\n        position: {\n            center: { cx: 400, cy: 250 },\n            rows: 5,\n            columns: 5,\n            size: { width: 90, height: 90 }\n        }\n    },\n    DM000003: {\n        questionType: 'DM000003',\n        flip: {\n            position: {\n                center: { cx: 400, cy: 250 }\n            }\n        }\n    },\n    DM000004: {\n        questionType: 'DM000004',\n        generate: {\n            num: [[[1, 99]], [[1, 99]]]\n        },\n        calculate: {\n            repeatCount: 5,\n            sign: '+',\n            type: 'h',\n            handWrite: false,\n            fontSize: 30\n        }\n    },\n    DM000005: {\n        questionType: 'DM000005',\n        directive: {\n            text: '큰 숫자를 눌러봐요!',\n            fontSize: 25,\n            ttsOffset: { x: 0, y: 0 },\n            center: { x: 400, y: 105 }\n        },\n        generate: {\n            num: [[[1, 9]], [[1, 9]]]\n        },\n        background: {\n            dayTime: 10000\n        },\n        choice: {\n            repeatCount: 3\n        },\n        fireworks: {\n            num: 12\n        }\n    }\n};\n","import { axios } from 'sol-common/util';\nimport * as meta from '../metaDataList';\n\nexport default async frameId => {\n    // const metaData = (await axios.get(`/learning/meta/D1/${frameId}`)).data.frameConfig;\n    // return metaData;\n    // if (process.env.SOL_FRAME_LOCAL_USER === 'JB') console.log('LOCAL TEST');\n    // try {\n    //     const metaData = (await axios.get(`/learning/meta/D1/${frameId}`)).data.frameConfig;\n    //     return metaData;\n    // } catch (error) {\n    //     return [meta.module[frameId]];\n    // }\n    return [meta.module[frameId]]\n};\n","import 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport { version } from '../package.json';\nimport './assets/styles/class.css';\nimport './assets/styles/font.css';\nimport getMetaData from './api';\nimport { parse } from 'querystring';\nimport { postMessage, preloadFonts, preloadModules, SOL } from 'sol-common/util';\nimport { createLoader, preloadMP3, preloadPNGImages, preloadSVGImages } from 'sol-common';\nimport Snap from 'sol-common/snap';\n\nconsole.log('D1: v' + version);\n\nconst getFrameId = () => parse(location.search.replace('?', '')).frame_id;\n\nconst setPreloadData = async ({ meta, fonts }) => {\n    const loader = createLoader();\n    preloadMP3(meta);\n    await Promise.all([preloadPNGImages(meta), preloadSVGImages(meta), preloadFonts(fonts), preloadModules(meta)]);\n    loader.remove();\n};\nconst setReceiveMessage = () => {\n    const message = {\n        forceFrameEnd: '00'\n    };\n\n    const methods = {\n        [message['forceFrameEnd']]: () => clearMain()\n    };\n\n    return ({ data }) => {\n        const { code, param } = data;\n        methods[code]?.(param);\n    };\n};\n\nconst getPostMessageData = data => {\n    const message = {\n        frameLoadEnd: '00',\n        frameEnd: '01'\n    };\n\n    return {\n        code: message[data]\n    };\n};\n\nconst setController = metaData => {\n    let tryCount = 3;\n    let actions = []; //0:오반응 1:정반응\n    let n = 0;\n\n    const run = async () => {\n        const meta = metaData[n];\n        initActions();\n\n        SOL.modules[meta.questionType]({\n            ...meta,\n            canvas: SOL.SVG,\n            callback: () => next()\n        });\n    };\n    const addUserAction = action => {\n        if (typeof action === 'boolean') action = Number(action);\n        actions.push(action);\n        const lastFeedbackActions = actions.filter(el => el === 0 || el === 1).slice(-tryCount);\n        const isConsecutiveIncorrect = lastFeedbackActions.length >= tryCount && lastFeedbackActions.every(el => el === 0);\n\n        isConsecutiveIncorrect && SOL.controller.next();\n    };\n    const next = async () => {\n        n += 1;\n        clearMain();\n        if (metaData[n]) {\n            run();\n        } else {\n            const poseMessageData = getPostMessageData('frameEnd');\n            postMessage(poseMessageData);\n        }\n    };\n    const initActions = () => (actions = []);\n\n    return { run, next, addUserAction, initActions, actions };\n};\n\n// const clearContents = () => SOL.SVG.children().forEach(el => el.hasClass('D1-contents') && el.remove());\n\nexport const clearMain = () => {\n    const main = document.getElementById('main');\n    let lastEl = main.lastChild;\n    let firstEl = main.firstChild;\n    while (lastEl !== SOL.SVG.node) {\n        lastEl.remove();\n        lastEl = main.lastChild;\n    }\n    while (firstEl !== SOL.SVG.node) {\n        firstEl.remove();\n        firstEl = main.firstChild;\n    }\n    SOL.SVG.clear();\n};\n\nconst start = async () => {\n    const frameId = getFrameId();    \n    const metaData = await getMetaData(frameId);\n\n    const receiveMessage = setReceiveMessage();\n    window.addEventListener('message', receiveMessage);\n\n    SOL.SVG = Snap('#frame2d');\n    await setPreloadData({ meta: metaData, fonts: ['ffgt', 'dn53'] });\n    SOL.controller = setController(metaData);\n    const poseMessageData = getPostMessageData('frameLoadEnd');\n    postMessage(poseMessageData);\n    SOL.controller.run();\n};\n\nstart();\n"],"sourceRoot":""}